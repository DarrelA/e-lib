services:
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data_${APP_ENV}:/data
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:latest
    container_name: e-lib-postgres
    ports:
      - '6500:5432'
    volumes:
      - postgres_data_${APP_ENV}:/var/lib/postgresql/data
    env_file:
      - ../config/.env.${APP_ENV}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d $POSTGRES_DB -U $POSTGRES_USER']
      interval: 5s
      timeout: 5s
      retries: 5

  app-integration-test:
    build:
      context: ..
      dockerfile: ./deployment/Dockerfile.integration_test
    image: e-lib-tester
    container_name: e-lib-tester
    ports:
      - '3000:3000'
    volumes:
      - ../testdata/reports:/root/testdata/reports
      - ../config/app.log:/root/config/app.log
    environment:
      - APP_ENV=${APP_ENV}
    env_file:
      - ../config/.env.${APP_ENV}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  postgres_data_test:
  redis_data_test:
