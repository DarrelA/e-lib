# Build stage
FROM golang:1.24.1-alpine3.21 AS builder

WORKDIR /app

COPY go.mod go.sum ./
RUN go mod download

COPY . .

# Build with coverage instrumentation
RUN CGO_ENABLED=0 GOOS=linux \
    go build -cover -a \
    -o e-lib-it \
    github.com/DarrelA/e-lib/cmd/loan

# Runtime stage
FROM alpine:3.21
RUN apk add --no-cache bash jq curl go

COPY --from=builder /app/e-lib-it /root/

COPY /testdata/json/test.books.json /root/testdata/json/
COPY /testdata/json/test.booksRequests.json /root/testdata/json/

COPY deployment/scripts/integration_test.sh /root/
COPY deployment/scripts/wrap_test_for_coverage.sh /root/

COPY /config/schema.elib.sql  /root/config/
COPY /config/test.schema.api_testing.sql  /root/config/

WORKDIR /root
RUN chmod +x *.sh

ENTRYPOINT ["/bin/bash", "-c", "go version && ./wrap_test_for_coverage.sh"]

